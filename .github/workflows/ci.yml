name: SQL CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      COMPOSE_PROJECT_NAME: sql_project  # фиксируем имя проекта для стабильных имён контейнеров

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Compose up (build image with pgTAP)
        run: docker compose up -d --build

      - name: Wait for Postgres in container (up to 10 min)
        run: |
          for i in {1..300}; do
            if docker compose exec -T db pg_isready -U app -d appdb; then
              echo "Postgres is up"; exit 0
            fi
            echo "Waiting for Postgres... ($i/300)"
            sleep 2
          done
          echo "Postgres did not become ready in time"
          echo "--- docker compose ps ---"
          docker compose ps || true
          echo "--- docker logs (last 200 lines) ---"
          docker compose logs --no-color --tail=200 db || true
          exit 1

      - name: Ensure pgTAP (idempotent)
        run: docker compose exec -T db psql -U app -d appdb -f /tests/pgtap_setup.sql

      - name: Run pgTAP tests
        run: |
          docker compose exec -T db psql -U app -d appdb -f /tests/test_basic.sql
          docker compose exec -T db psql -U app -d appdb -f /tests/test_queries.sql

      # >>> ЭТОТ шаг создаёт /analytics/run.log внутри контейнера <<<
      - name: Run showcase (produces /analytics/run.log)
        run: docker compose exec -T db bash -lc "psql -U app -d appdb -f /analytics/readme_index.sql > /analytics/run.log 2>&1"

      - name: Show /analytics/run.log (tail)
        if: always()
        run: |
          set -e
          CID=$(docker compose ps -q db || true)
          if [ -n "$CID" ] && docker exec "$CID" test -f /analytics/run.log; then
            echo "----- tail /analytics/run.log -----"
            docker exec "$CID" tail -n 200 /analytics/run.log || true
          else
            echo "run.log not found in container"
          fi

      - name: Copy run.log out
        if: always()
        run: |
          CID=$(docker compose ps -q db || true)
          if [ -n "$CID" ]; then
            docker cp "$CID":/analytics/run.log ./analytics/run.log || true
          fi

      - name: Upload run.log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: readme-runlog
          path: ./analytics/run.log
          if-no-files-found: warn

      - name: Dump DB logs on failure
        if: failure()
        run: docker compose logs --no-color --tail=300 db

      - name: Save DB logs as artifact
        if: always()
        run: docker compose logs --no-color db > db.logs.txt || true

      - name: Upload DB logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: db-logs
          path: db.logs.txt

      - name: Compose down (cleanup)
        if: always()
        run: docker compose down -v
